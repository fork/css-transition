{"version":3,"sources":["AnimationFrameQueue.js","DOMHelpers.js","CSSTransition.js","index.js"],"names":["AnimationFrameQueue","queue","onAnimationFrame","bind","length","dequeue","requestAnimationFrame","fn","push","shift","addClass","element","classNames","filter","className","classList","contains","forEach","add","removeClass","remove","CSSTransition","prefix","animationTimeout","onTransitionEnd","onTransitionTimeout","clear","clearTimeout","timeout","removeEventListener","allowedDirections","direction","enqueue","console","warn","indexOf","Error","cleanup","addEventListener","setTimeout","run"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["/**\n * FIFO-Queue which automatically dequeues on requestAnimationFrame\n *\n * This helper class is useful to run multiple requestAnimationFrame-based\n * steps sequentially while being able to cancel all of them at any time.\n *\n * For performance reasons, requestAnimationFrame is only called while\n * the queue is not empty.\n */\nclass AnimationFrameQueue {\n  constructor() {\n    this.queue = [];\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n  }\n\n  /**\n   * Callback for requestAnimationFrame\n   * @private\n   * @returns {void}\n   */\n  onAnimationFrame() {\n    if (this.queue.length > 0) {\n      this.dequeue()();\n    }\n\n    if (this.queue.length > 0) {\n      requestAnimationFrame(this.onAnimationFrame);\n    }\n  }\n\n  /**\n   * Clear queue\n   * @returns {void}\n   */\n  clear() {\n    this.queue = [];\n  }\n\n  /**\n   * Enqueue function onto requestAnimationFrame queue\n   * @param {function} fn - Function which should be queued\n   * @returns {void}\n   */\n  enqueue(fn) {\n    this.queue.push(fn);\n\n    if (this.queue.length === 1) {\n      requestAnimationFrame(this.onAnimationFrame);\n    }\n  }\n\n  /**\n   * Retrieve oldest queue entry and remove it from queue\n   * @returns {function} Oldest queue entry\n   */\n  dequeue() {\n    return this.queue.shift();\n  }\n}\n\nexport default AnimationFrameQueue;\n","/**\n * Adds classes to a DOM element\n * @param {Element} element - Element the classes should get added to\n * @param {string} classNames - One or more classnames\n * @returns {void}\n */\nexport const addClass = (element, ...classNames) =>\n  classNames\n    .filter(className => !element.classList.contains(className))\n    .forEach(className => element.classList.add(className));\n\n/**\n * Removes classes from a DOM element\n * @param {Element} element - Element the classes should get removed from\n * @param {string} classNames - One or more classnames\n * @returns {void}\n */\nexport const removeClass = (element, ...classNames) =>\n  classNames\n    .filter(className => element.classList.contains(className))\n    .forEach(className => element.classList.remove(className));\n","import AnimationFrameQueue from './AnimationFrameQueue';\nimport { addClass, removeClass } from './DOMHelpers';\n\n/**\n * Applies a CSS class for each stage of a CSS transition\n *\n * A transition consists of three stages:\n * 1. Start: Used to set initial transition state, e.g. display: block; opacity: 0;\n * 2. Active: Used to set the actual transitions, e.g. opacity: 1;\n * 3. Done: Used to consist the result of active, e.g. opacity: 1;\n *\n * Start and active stage get queued via requestAnimationFrame.\n *\n * The done stage gets applied after the first transitionend event or\n * when the animationTimeout is reached.\n */\nclass CSSTransition {\n  static get allowedDirections() {\n    return ['enter', 'exit'];\n  }\n\n  /**\n   * @param {HTMLElement} element - Element on which to apply the CSS classes\n   * @param {string} prefix - Default: ''. Sets a prefix on all CSS classes\n   * @param {number} animationTimeout - Default: 500. Time to wait for transitionend to happen\n   */\n  constructor(element, prefix = '', animationTimeout = 500) {\n    this.element = element;\n    this.prefix = prefix;\n    this.animationTimeout = animationTimeout;\n\n    this.queue = new AnimationFrameQueue();\n\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\n    this.onTransitionTimeout = this.onTransitionTimeout.bind(this);\n  }\n\n  /**\n   * Cleanup all previous animation state\n   * @private\n   * @returns {void}\n   */\n  cleanup() {\n    this.queue.clear();\n\n    clearTimeout(this.timeout);\n    this.element.removeEventListener('transitionend', this.onTransitionEnd);\n\n    CSSTransition.allowedDirections.forEach(direction => {\n      removeClass(\n        this.element,\n        `${this.prefix}${direction}`,\n        `${this.prefix}${direction}-active`,\n        `${this.prefix}${direction}-done`\n      );\n    });\n  }\n\n  /**\n   * Callback for when the transition has finished\n   * @private\n   * @returns {void}\n   */\n  onTransitionEnd() {\n    clearTimeout(this.timeout);\n    this.element.removeEventListener('transitionend', this.onTransitionEnd);\n\n    this.queue.enqueue(() => {\n      removeClass(this.element, `${this.prefix}${this.direction}-active`);\n      addClass(this.element, `${this.prefix}${this.direction}-done`);\n    });\n  }\n\n  /**\n   * Callback for when the transition runs into timeout\n   * @private\n   * @returns {void}\n   */\n  onTransitionTimeout() {\n    console.warn(\n      `CSSTransition: Timeout fired on '${\n        this.direction\n      }'. Please check whether there is a transition on`,\n      this.element\n    );\n\n    this.onTransitionEnd();\n  }\n\n  /**\n   * Apply CSS transition stages\n   * @private\n   * @param {string} direction - One of CSSTransition.allowedDirections\n   * @returns {void}\n   */\n  run(direction) {\n    if (CSSTransition.allowedDirections.indexOf(direction) === -1) {\n      throw new Error(`Unknown direction: ${direction}`);\n    }\n\n    this.direction = direction;\n\n    // 1. make sure no other transition is running and clean them up\n    this.cleanup();\n\n    // 2. add ${this.direction} class on first animation frame\n    this.queue.enqueue(() => {\n      addClass(this.element, `${this.prefix}${this.direction}`);\n    });\n\n    // 3. add ${this.direction}-active class on next animation frame\n    this.queue.enqueue(() => {\n      removeClass(this.element, `${this.prefix}${this.direction}`);\n      addClass(this.element, `${this.prefix}${this.direction}-active`);\n    });\n\n    // 4.1. add enter-done class on transition end\n    this.element.addEventListener('transitionend', this.onTransitionEnd);\n\n    // 4.2. or after timeout\n    this.timeout = setTimeout(this.onTransitionTimeout, this.animationTimeout);\n  }\n\n  /**\n   * Apply enter CSS transition stages\n   * @returns {void}\n   */\n  enter() {\n    this.run('enter');\n  }\n\n  /**\n   * Apply exit CSS transition stages\n   * @returns {void}\n   */\n  exit() {\n    this.run('exit');\n  }\n}\n\nexport default CSSTransition;\n","import CSSTransition from './CSSTransition';\nimport AnimationFrameQueue from './AnimationFrameQueue';\n\nexport { AnimationFrameQueue, CSSTransition };\nexport default CSSTransition;\n"]}